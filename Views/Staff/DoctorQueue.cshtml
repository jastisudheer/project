@model DoctorQueueModel

<partial name="Navbar" />

@if (TempData.ContainsKey("D_ConfirmationMessage"))
{
<div class="alert alert-success">
    @TempData["D_ConfirmationMessage"]
    <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
</div>
}
@if (TempData.ContainsKey("D_WarningMessage"))
{
<div class="alert alert-danger">
    @TempData["D_WarningMessage"]
    <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
</div>
}

<div class="grid">
    <partial name="SidebarPartial" />

    <div class="right">

        @for (int i = 0; i < Model.QueueViewModel.PatientsInLine.Count(); i++)
        {
            int index = 0;
            var patient = Model.QueueViewModel.PatientsInLine[i];

        }


        @*diagnose modal*@
        @for (int i = 0; i < Model.QueueViewModel.PatientsInLine.Count(); i++)
        {
            int index = 0;
            var patient = Model.QueueViewModel.PatientsInLine[i];

        @if(patient.HasVisitedLab)
        {
        <div class="lab-report" id="lab-report-@patient.PatientNo">
            <div class="form-card" style="border-radius:5px">
                @foreach(var lab in @Model.CreateMedicalViewModel[i].VisitedLabs){
                @if(index == 0){
                <div id="lab-@patient.PatientNo-@index">
                    <h2 id="title" class="p-3" style="padding: 0 !important">
                        <p id="@lab.LabName">
                            @lab.LabName
                        </p>
                        <button class="close-button" onclick="toggleLabReport(0, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" type="button">
                            X
                        </button>
                    </h2>
                    <hr>
                    <div class="lab-details">
                        <h3>Notes</h3>
                        <p>
                            @lab.Notes
                        </p>
                        <hr>
                        <h3>Result</h3>
                        <p>
                            @lab.Result
                        </p>
                    </div>
                </div>
                }else{
                <div id="lab-@patient.PatientNo-@index" style="display:none">
                    <h2 id="title" class="p-3" style="padding: 0 !important">
                        <p id="@lab.LabName">
                            @lab.LabName
                        </p>
                        <button class="close-button" onclick="toggleLabReport(0, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" type="button">
                            X
                        </button>
                    </h2>
                    <hr>
                    <div class="lab-details">
                        <h3>Notes</h3>
                        <p>
                            @lab.Notes
                        </p>
                        <hr>
                        <h3>Result</h3>
                        <p>
                            @lab.Result
                        </p>
                        @* <button type="button">Show Files</button> *@
                    </div>
                </div>
            }
            index++;
        }

                <hr style="margin-bottom:15px">
                <div>
                    <ul class="pagination justify-content-center">
                        @for (int pageIndex = 0; pageIndex < Model.CreateMedicalViewModel[i].VisitedLabs.Count; pageIndex++)
                        {
                            <li onclick="togglelabview('@patient.PatientNo', 'lab-@patient.PatientNo-@pageIndex')" class="page-link">
                                @(pageIndex + 1)
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        }

        @*Drugs modal*@
        <div class="modal-card-overlay" style='display:none' id="diagnose-@patient.PatientNo">
            <div class="form-card modal-card">
                <div style="padding: 10px calc(1rem + 10px); display: flex; justify-content: space-between">
                    <h2 id="title" class="p-3" style="padding: 0 !important">
                        <p>
                            Drugs
                        </p>
                    </h2>
                    <h2 style="cursor:pointer" onclick="toggleView('diagnose', 'exampleModal', '@patient.PatientNo')">
                        X
                    </h2>
                </div>
                <hr style="margin:2px 0" />
                <div style="padding: 10px calc(1rem + 10px)">
                    <div style="position:relative;height:40px">
                        <button type="button" style="position: absolute; right: 0"
                        onclick="toggleView('diagnose', 'give-drugs', '@patient.PatientNo')"
                        class="btn btn-success">
                            Add
                        </button>
                    </div>
                    <div class="drugs-table">
                        <div style="border-right:1px solid black">
                            Name
                        </div>
                        <div style="border-right:1px solid black">Dosage</div>
                        <div>Action</div>
                        @{
                            @if(patient.HasVisitedLab || patient.HasDrugs){
                                var drugList = new List<Drug>();
                                @for (int d = 0; d < 10; d++)
                                {
                                    var newDrug = new Drug();
                                    @if(Model.CreateMedicalViewModel[i].DrugNames.Count() > d)
                                    {
                                        newDrug = Model.CreateMedicalViewModel[i].DrugNames[d];
                                    }
                                    drugList.Add(newDrug);
                                }
                                Model.CreateMedicalViewModel[i].DrugNames = drugList;
                                @foreach (var drug in Model.CreateMedicalViewModel[i].DrugNames){
                                    @if(!String.IsNullOrEmpty(drug.DrugName)){
                                        <div style="border-top:1px solid black;border-right:1px solid black">@drug.DrugName</div>
                                        <div style="border-top:1px solid black;border-right:1px solid black" id='@drug.DrugName'>@drug.Dosage</div>
                                        <div style="border-top:1px solid black;display:flex;align-items:center;justify-content:center">
                                            <button class="btn btn-danger delete-drug" data-toDelete="Drug"
                                                data-drugname="@drug.DrugName" id="@($"{drug.DrugName.Replace(" ", "_")}-{patient.PatientNo}")"
                                                data-patientNo="@patient.PatientNo">
                                                Delete
                                            </button>
                                        </div>
                                    }
                                }
                            }
                        }
                    </div>
                    <div style="position:relative;height:40px">
                        <form method="post" asp-action="SendToPharmacy">
                            <input name="patientNo" type="hidden" value="@patient.PatientNo"/>
                            <button style="top:10px;position:absolute;right:0" class="btn btn-primary">
                                Submit
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        @* give drugs *@
        <div class="modal-card-overlay" style='display:none' id="give-drugs-@patient.PatientNo">
            <div class="form-card modal-card">
                <form id="addDrug" className="drugsForm">
                    <div style="padding: 10px calc(1rem + 10px); display: flex; justify-content: space-between">
                        <h2 id="title" class="p-3" style="padding: 0 !important">
                            <p>
                                Add Drugs
                            </p>
                        </h2>
                        <div>
                            <h2 style="cursor:pointer" onclick="toggleView('give-drugs', 'diagnose', '@patient.PatientNo')">X</h2>
                        </div>
                    </div>
                    <hr style="margin:2px 0" />
                    <div style="padding: 10px calc(1rem + 10px);display:grid;grid-template-columns:repeat(2,1fr);gap:20px;">
                        <div style="position:relative">
                            <h4 style="margin-bottom:5px;padding:0">Name</h4>
                            <input name="drugName" placeholder="Enter name here" autocomplete="off" id="input-box" onkeyup="search()" />
                            <div class="result-box">
                            </div>
                        </div>
                        <div>
                            <h4>Dosage</h4>
                            <select name="dosage" class="dosage-select" style="width:100%">
                                <option value="1 tab">1 Tab</option>
                                <option value="2 tab">2 Tab</option>
                                <option value="3 tab">3 Tab</option>
                            </select>
                        </div>
                        <div>
                            <h4 style="margin-bottom:5px;padding:0">Time of Day</h4>
                            <select name="timeOfDay" style="width:100%">
                                <option value="Morning, Afternoon, Evening">Morning, Afternoon, Evening</option>
                                <option value="Morning, Afternoon">Morning, Afternoon</option>
                                <option value="Morning, Evening">Morning, Evening</option>
                                <option value="Afternoon, Evening">Afternoon, Evening</option>
                                <option value="Morning">Morning</option>
                                <option value="Afternoon">Afternoon</option>
                                <option value="Evening">Evening</option>
                            </select>
                        </div>
                        <div>
                            <h4 style="padding:0">Time to Take</h4>
                            <input name="beforeOrAfter" style="width:100%;" placeholder="Before/After meal" type="text" />
                        </div>
                        <div style='grid-column:1/3'>
                            <h4 style="margin-bottom:5px;padding:0">Note</h4>
                            <textarea name="notes" rows="4" style="width:100%" placeholder="Extra notes"></textarea>
                        </div>
                        <input type="hidden" value="@patient.PatientNo" name="patientNo" />
                        <div style="position:absolute;right:25px;bottom:20px;height:35px;">
                            <button type="submit" style="position:absolute;right:0;top:5px" class="btn btn-primary">
                                Save
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        @*Lab modal*@
        <div class="modal-card-overlay" style="display:none" id="lab-request-@patient.PatientNo">
            <div class="form-card modal-card">
                <div style="padding: 10px calc(1rem + 10px); display: flex; justify-content: space-between">
                    <h2 id="title" class="p-3" style="padding: 0 !important">
                        <p>
                            Lab Request
                        </p>
                    </h2>
                    <h2 style="cursor:pointer" onclick="toggleView('lab-request', 'exampleModal', '@patient.PatientNo')">X</h2>
                </div>
                <hr style="margin:2px 0" />
                <div style="padding: 10px calc(1rem + 10px)">
                    <div style="position:relative;height:40px">
                        <button type="button" style="position: absolute; right: 0" onclick="toggleView('lab-request', 'give-labs', '@patient.PatientNo')" class="btn btn-success">
                            Add
                        </button>
                    </div>
                    <div class="lab-table">
                        <div style="border-right:1px solid black">
                            Type
                        </div>
                        <div style="border-right:1px solid black">
                            Diagnosis
                        </div>
                        <div style="padding: 3px">
                            Actions
                        </div>
                        @{
                            @if(Model.CreateMedicalViewModel[i].VisitedLabs != null){
                                var labList = new List<Lab>();
                                @for (int l = 0; l < 10; l++)
                                {
                                    var newLab = new Lab();
                                    @if(Model.CreateMedicalViewModel[i].VisitedLabs.Count() > l)
                                    {
                                        newLab = Model.CreateMedicalViewModel[i].VisitedLabs[l];
                                    }
                                    labList.Add(newLab);
                                }
                                Model.CreateMedicalViewModel[i].VisitedLabs = labList;
                                @foreach (var lab in Model.CreateMedicalViewModel[i].VisitedLabs){
                                    @if(!String.IsNullOrEmpty(lab.LabName)){
                                        <div style="border-top:1px solid black;border-right:1px solid black">@lab.LabName</div>
                                        <div style="border-top:1px solid black;border-right:1px solid black" id='@lab.LabName'>@lab.Diagnosis</div>
                                        <div style="border-top:1px solid black;display:flex;align-items:center;justify-content:center">
                                            <button class="btn btn-danger delete-drug" data-toDelete="Lab"
                                                data-drugname="@lab.LabName" id="@($"{lab.LabName.Replace(" ", "_")}-{patient.PatientNo}")"
                                                data-patientNo="@patient.PatientNo">
                                                Delete
                                            </button>
                                        </div>
                                    }
                                }
                            }
                        }
                    </div>
                    <div style="position:relative;height:40px">
                        <form method="post" asp-action="SendToLab">
                            <input name="patientNo" type="hidden" value="@patient.PatientNo"/>
                            <button style="top:10px;position:absolute;right:0" class="btn btn-primary">
                                Submit
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        @* add labs *@
        <div class="modal-card-overlay" style='display:none' id="give-labs-@patient.PatientNo">
            <div class="form-card modal-card">
                <div style="padding: 10px calc(1rem + 10px); display: flex; justify-content: space-between">
                    <h2 id="title" class="p-3" style="padding: 0 !important">
                        <p>
                            Add Lab
                        </p>
                    </h2>
                    <h2 style="cursor:pointer" onclick="toggleView('give-labs', 'lab-request', '@patient.PatientNo')">X</h2>
                </div>
                <hr style="margin:2px 0" />
                <form id='addLab'>
                    <div style="padding: 10px calc(1rem + 10px)">
                        <h4 style="margin:10px 0;padding:0">Type</h4>
                        <div class="select-options" id="labFieldsTemplate">
                            <h4 id="b-selector" onClick="showOptions('b-@patient.QueueNo')">Select Lab</h4>
                            <div style="visibility:hidden;opacity:0;top:0;transition:.3s" class="b-@patient.QueueNo">
                                @foreach(var labName in Model.CreateMedicalViewModel[i].AvailableLabNames)
                                {
                                <p>
                                    <input style="cursor:pointer" type="radio" id="l-@i-@labName" value="@labName" name="SelectLabNames" />
                                    <label onClick="showOptions('b-@patient.QueueNo')" for="l-@i-@labName">@labName</label>
                                </p>
                                }
                                <p>
                                    <input style="cursor:pointer" type="radio" id="no_labs" value="" name="SelectLabNames" />
                                    <label onClick="showOptions('b-@patient.QueueNo')" for="no_labs">None</label>
                                </p>
                            </div>
                        </div>
                        <div>
                            <h4 style="margin:10px 0;padding:0">Diagnosis</h4>
                            <textarea rows="4" style="width:100%" placeholder="Diagnosis for lab" id="lab_diagnosis"></textarea>
                        </div>
                        <input type="hidden" value="@patient.PatientNo" name="patientNo" />
                        <div style="position:relative;height:35px;">
                            <button type="submit" id="submitLab"
                                style="position:absolute;right:0;top:5px"
                                onclick="toggleView('give-labs', 'lab-request', '@patient.PatientNo')"
                                class="btn btn-primary">
                                Save
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        @*Add wards*@
        @*Ward modal*@
        <div class="modal-card-overlay" style='display:none' id="ward-request-@patient.PatientNo">
            <div class="form-card modal-card">
                <form id='admitPatient'>
                    <div style="padding: 10px calc(1rem + 10px); display: flex; justify-content: space-between">
                        <h2 id="title" class="p-3" style="padding: 0 !important">
                            <p style="margin:0;padding:0">
                                Admit Patient
                            </p>
                        </h2>
                        <h2 style="cursor:pointer" onclick="toggleView('ward-request', 'exampleModal', '@patient.PatientNo')">X</h2>
                    </div>
                    <hr style="margin:2px 0" />
                    <div style="padding: 10px calc(1rem + 10px)">
                        <div class="select-options mb-3" id="WardsTemplate">
                            <h4 id="a-selector" onClick="showOptions('a-@patient.QueueNo')">Select Ward Name</h4>
                            <div style="visibility:hidden;opacity:0;top:0;transition:.3s" class="a-@patient.QueueNo">
                                @foreach(var wardName in Model.CreateMedicalViewModel[i].AvailableWardNames)
                                {
                                <p>
                                    <input style="cursor:pointer" type="radio" id="w-@i-@wardName" value="@wardName" name="SelectWardNames" />
                                    <label onClick="showOptions('a-@patient.QueueNo')" for="w-@i-@wardName">@wardName</label>
                                </p>
                                }
                                <p>
                                    <input style="cursor:pointer" type="radio" id="no_ward" value="" name="SelectWardNames" />
                                    <label onClick="showOptions('a-@patient.QueueNo')" for="no_ward">None</label>
                                </p>
                            </div>
                        </div>
                        <input type="hidden" value="@patient.PatientNo" name="patientNo" />
                        <div style="position:relative;height:40px">
                            <button style="top:10px;position:absolute;right:0" class="btn btn-primary">
                                Submit
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        }



        <div class="form-card main-card" style="@(Model.QueueViewModel.TotalPatients > 8 ? "height:950px" : "height:800px")">
            <h2 id="title" class="p-3">
                <p>
                    Doctor Queue
                </p>
            </h2>
            <form method="get" class="search" action="@Url.Action("DoctorQueue")">
                <div class="input-group mb-3 px-3">
                    <input type="text" name="search" class="form-control" placeholder="Search by Patient_No, Firstname or Lastname" aria-describedby="button-addon2">
                    <button class="search-button" type="submit" id="button-addon2">Search</button>
                </div>
            </form>

            @if (Model.QueueViewModel.PatientsInLine.Any())
            {
            <table class="custom-table">
                <thead>
                    <tr>
                        <th>PatientNo</th>
                        <th>Patient Name</th>
                        <th>QueueNo</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @* @foreach (var patient in Model.QueueViewModel.PatientsInLine) *@
                    @for (int i = 0; i < Model.QueueViewModel.PatientsInLine.Count(); i++)
                        {
                            var patient = Model.QueueViewModel.PatientsInLine[i];
                        <tr>
                            <td>@patient.PatientNo</td>
                            <td>@($"{patient.Patient.LastName} {patient.Patient.FirstName}")</td>
                            <td>@patient.QueueNo</td>
                            <td>
                                @if(i == 0){
                                <button type="button" class="table-button" data-bs-toggle="modal" data-bs-target="#exampleModal-@patient.PatientNo">
                                    @if(patient.HasVisitedLab)
                                        {
                                    @($"Continue Diagnosis")
                                        }
                                        else{
                                    @($"Diagnose Patient")
                                        }
                                </button>
                                }
                                else{
                                <a href="@Url.Action("Doctor", new { patientNo = patient.PatientNo })">
                                    <button type="button" class="table-button">
                                        @if(patient.HasVisitedLab)
                                            {
                                        @($"Continue Diagnosis")
                                            }
                                            else{
                                        @($"Diagnose Patient")
                                            }
                                    </button>
                                </a>
                                }
                            </td>
                        </tr>

                        <div class="modal fade exampleModal-@patient.PatientNo" id="exampleModal-@patient.PatientNo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 id="exampleModalLabel">
                                            <p>Diagnose @patient.Patient.FirstName</p>
                                        </h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-action="SaveMedicalRecords" method="post" autocomplete="off">
                                            <div class="container">
                                                <div class="diagnose_row">
                                                    <div class="diagnose_col">
                                                        <div class="mb-2 doc-flex">
                                                            <label asp-for="CreateMedicalViewModel[i].Symptoms" class="form-label">Symptoms</label>
                                                            <textarea asp-for="CreateMedicalViewModel[i].Symptoms"
                                                                class="form-control" rows="3"
                                                                placeholder="Enter Symptoms Here"
                                                                id="symptoms">
                                                            </textarea>
                                                        </div>
                                                    </div>
                                                    <div class="diagnose_col">
                                                        <div class="mb-2 doc-flex">
                                                            <label asp-for="CreateMedicalViewModel[i].Diagnoses" class="form-label">Diagnoses</label>
                                                            <textarea asp-for="CreateMedicalViewModel[i].Diagnoses"
                                                                class="form-control" rows="3"
                                                                placeholder="Enter Diagnosis Here"
                                                                id="diagnoses">
                                                            </textarea>
                                                        </div>
                                                    </div>
                                                </div>
                                                <input asp-for="CreateMedicalViewModel[i].PatientNo" value="@patient.PatientNo" style="display:none" />
                                                <input name="index" value="@i" style="display:none" />

                                                <div class="modal-footer px-0">
                                                    @if(patient.HasVisitedLab)
                                                    {
                                                    <button type="button" onclick="toggleLabReport(1, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" class="auth-button">View Lab Report</button>
                                                    }
                                                    <div style="display:grid; grid-template-columns:repeat(3, 1fr);gap:10px;width:100%">
                                                        <button type="button" class="auth-button w-100" style="margin-bottom: 0; font-size:1.3em" onclick="toggleView('exampleModal', 'diagnose', '@patient.PatientNo')">Give Drugs</button>
                                                        <button type="button" class="auth-button w-100" style="margin-bottom: 0; font-size: 1.3em" onclick="toggleView('exampleModal', 'lab-request', '@patient.PatientNo')">Lab Request</button>
                                                        <button type="button" class="auth-button w-100" style="margin-bottom: 0; font-size: 1.3em" onclick="toggleView('exampleModal', 'ward-request', '@patient.PatientNo')">Admit</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                </tbody>
            </table>

            <nav class="py-3" aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (Model.QueueViewModel.CurrentPage > 1)
                        {
                    <li class="page-item"><a class="page-link" href="@Url.Action("DoctorQueue", new { page = Model.QueueViewModel.CurrentPage - 1, search = Model.QueueViewModel.Search })">Previous</a></li>
                        }

                    @for (int i = 1; i <= Model.QueueViewModel.TotalPatients / Model.QueueViewModel.PageSize + 1; i++)
                        {
                    <li class="page-item"><a href="@Url.Action("DoctorQueue", new { page = i, search = Model.QueueViewModel.Search })" class="@(i == Model.QueueViewModel.CurrentPage ? "active page-link" : "page-link")">@i</a></li>
                        }

                    @if (Model.QueueViewModel.CurrentPage < Model.QueueViewModel.TotalPatients / Model.QueueViewModel.PageSize + 1)
                        {
                    <li class="page-item"><a class="page-link" href="@Url.Action("DoctorQueue", new { page = Model.QueueViewModel.CurrentPage + 1, search = Model.QueueViewModel.Search })">Next</a></li>
                        }
                </ul>
            </nav>
                    }
                    else
                    {
            <p class="p-3 no-patinet">No patients in line.</p>
                    }
        </div>
    </div>
</div>

<partial name="FooterPartial" />

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

    @*ajax get request*@
    <script>
        $(document).ready(function () {
            $("#button1").on("click", function () {
                $.get("/Staff/MyJson", function (data) {
                    $('#emptyDiv').html(data.def)
                })
            })
        })
    </script>
    @* delete a drug using ajax *@
    <script>
        $(document).ready(function() {
            $(".delete-drug").click(function(e){
                var drugName = $(this).data('drugname')
                var patientNo = $(this).data('patientno')
                var toDelete  = $(this).data("todelete")

                var confirmDelete = confirm("Are you sure you want to delete this?")

                if(confirmDelete){
                    $.ajax({
                        method: "POST",
                        url: `/Staff/Delete${toDelete}`,
                        data: {Name: drugName, patientNo: patientNo},
                        success: function(data){
                            var parentDiv = $("#" + drugName.replace(/ /g, "_") + "-" + patientNo).closest('div')
                            parentDiv.prev().prev().remove();
                            parentDiv.prev().remove();
                            parentDiv.remove();
                        },
                        error: function(error){
                            console.error("Error deleting lab", error)
                            alert("Error deleting lab")
                        }
                    })
                }
                
            })
        })
    </script>
    @* admit patient using ajax *@
    <script>
        $(document).ready(function(){
            $("#admitPatient").submit(function(e){
                e.preventDefault()
                
                var diagnoses = document.querySelector('#diagnoses')
                var symptoms = document.querySelector('#symptoms')

                if(symptoms.value === ""){
                    alert("Symptoms textarea cannot be empty")
                    return
                }
                if(diagnoses.value === ""){
                    alert("Diagnosis textarea cannot be empty")
                    return
                }

                var admitForm = $(this).serialize() + `&Diagnoses=${diagnoses.value}&Symptoms=${symptoms}`;

                var confirmAdmit = confirm("Are you sure you want to admit patient");
                if(confirmAdmit){
                    $.ajax({
                        method: "POST",
                        url: "/Staff/SendToWard",
                        data: admitForm,
                        success: function(data){
                            window.location.href = "DoctorQueue"
                        },
                        error: function(error){
                            let body = document.getElementsByTagName("body")
                            $("body").append(`
                                <div class="alert alert-danger added">
                                    An error occured, patient could not be admitted
                                    <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
                                </div >
                            `);
                        }
                    })
                }
            })
        })
    </script>
    @* add to lab using ajax *@
    <script>
        $(document).ready(function() {
            $("#addLab").submit(function(e){
                e.preventDefault()
                var labName = document.querySelector('input[name="SelectLabNames"]:checked')
                var lab_diagnosis = document.getElementById("lab_diagnosis")
                var diagnoses = document.querySelector('#diagnoses')
                var symptoms = document.querySelector('#symptoms')

                if(symptoms.value === ""){
                    alert("Symptoms textarea cannot be empty")
                    return
                }
                if(diagnoses.value === ""){
                    alert("Diagnosis textarea cannot be empty")
                    return
                }

                var formData = $(this).serialize() + `&Diagnosis=${lab_diagnosis.value}&Diagnoses=${diagnoses.value}&Symptoms=${symptoms}`;

                $.ajax({
                    method: "POST",
                    url: '/Staff/AddLab',
                    data: formData,
                    success: function(response){
                        let body = document.getElementsByTagName("body")
                        $("body").append(`
                            <div class="alert alert-${response.type} added">
                                ${response.message}
                                <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
                            </div >
                        `);
                        if (response.type == "success") {
                            $(".lab-table").append(`
                                <div style="border-top:1px solid black;border-right:1px solid black">${response.labName}</div>
                                <div style="border-top:1px solid black;border-right:1px solid black" id='${response.diagnosis}'>Has not been to lab yet</div>
                                <div style="border-top:1px solid black;display:flex;align-items:center;justify-content:center">
                                    <button class="btn btn-danger delete-drug" data-toDelete="Lab"
                                        data-drugname="${response.labName}" id="${response.labName.replace(/ /g, "_")}-${response.patientNo}"
                                        data-patientNo="${response.patientNo}">
                                        Delete
                                    </button>
                                </div>
                            `)
                            setTimeout(() => {
                                $(".added").remove();
                            }, "4000");
                            toggleView('give-labs', 'lab-request', response.patientNo)
                        }
                        else if (response.type == 'warning') {
                            let change = document.getElementById(response.drugName)
                            change.innerText = response.dosage
                            setTimeout(() => {
                                $(".added").remove();
                            }, "4000");
                            toggleView('give-labs', 'lab-request', response.patientNo)
                        }
                        lab_diagnosis.innerText = ""
                        document.querySelector("#selector").innerText = "Select Lab"
                        $("#addLab").reset()
                    },
                    error: function(error){
                        console.error("An error occured during the form processing")
                    }
                })
                
                labName.checked = false
            })
        })
    </script>
    @*submit add drug form*@
    <script>
        $(document).ready(function () {
            $("#addDrug").submit(function (e) {
                e.preventDefault();
                var diagnoses = document.querySelector('#diagnoses')
                var symptoms = document.querySelector('#symptoms')

                if(symptoms.value === ""){
                    alert("Symptoms textarea cannot be empty")
                    return
                }
                if(diagnoses.value === ""){
                    alert("Diagnosis textarea cannot be empty")
                    return
                }

                // Serialize the form data
                var formData = $(this).serialize()  + `&Diagnoses=${diagnoses.value}&Symptoms=${symptoms}`;
                var dataArray = formData.split("&").map(function (item) {
                    var pair = item.split("=");
                    return { name: pair[0], value: decodeURIComponent(pair[1]) };
                });

                // Make the AJAX POST request
                $.ajax({
                    method: 'POST',
                    url: '/Staff/AddDrug',
                    data: formData,
                    success: function (response) {
                        let body = document.getElementsByTagName("body")
                        $("body").append(`
                            <div class="alert alert-${response.type} added">
                                ${response.message}
                                <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
                            </div >
                        `);
                        if (response.type == "success") {
                            $(".drugs-table").append(`
                                <div style="border-top:1px solid black;border-right:1px solid black">${response.drugName}</div>
                                <div style="border-top:1px solid black;border-right:1px solid black" id='${response.drugName}'>${response.dosage}</div>
                                <div style="border-top:1px solid black;display:flex;align-items:center;justify-content:center">
                                    <button class="btn btn-danger delete-drug" data-toDelete="Drug"
                                        data-drugname="${response.drugName}" id="${response.drugName.replace(/ /g, "_")}-${response.patientNo}"
                                        data-patientNo="${response.patientNo}">
                                        Delete
                                    </button>
                                </div>
                            `)
                            setTimeout(() => {
                                $(".added").remove();
                            }, "4000");
                            toggleView('give-drugs', 'diagnose', dataArray[5].value)
                        }
                        else if (response.type == 'warning') {
                            let change = document.getElementById(response.drugName)
                            change.innerText = response.dosage
                            setTimeout(() => {
                                $(".added").remove();
                            }, "4000");
                            toggleView('give-drugs', 'diagnose', dataArray[5].value)
                        }
                        document.getElementById('addDrug').reset()
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
    @*add and remove drugs*@
    <script>
        $(document).ready(function () {
            // Function to add drug input fields
            var maxDrugFields = 10;

            function addDrug(item) {
                item = item.toString();
                if ($(`.field-${item}:visible`).length < maxDrugFields) {
                    $('.last-drug').removeClass('last-drug');
                    let div = $(`.field-${item}:hidden:first`).show();
                    div.show();
                    $(`.field-${item}:visible:last`).addClass('last-drug');
                }
            }

            // Function to remove drug input field (in case of error check .drug_input or add a new class to replace drug_input)
            function removeDrug(index, patientNo) {
                $(`.field-${patientNo}[data-index="${index}"]:visible`).removeClass('last-drug');
                var drugField = $(`.field-${patientNo}[data-index="${index}"]:visible`);
                if (drugField.length > 0) {
                    drugField.removeClass('last-drug');
                    drugField.hide();
                    $(`.field-${patientNo}:visible:last`).addClass('last-drug');
                    drugField.find('input').val('');
                }
            }

            // Add More Drugs button click event
            $('[id^="addMoreDrugs-"]').click(function () {
                var patientId = $(this).data('patient-id');
                addDrug(patientId);
            });

            // Remove Drug button click event
            $('[id^="drugFields-"]').on('click', '.remove-drug', function () {
                var removeIndex = $(this).closest('.drug_input').data('index');
                var patientNo = $(this).closest('.drug_input').data('patient-id');
                removeDrug(removeIndex, patientNo);
            });
        });
    </script>
    @*dropdown for lab and ward*@
    <script>
        $('#multiple-select-field').select2({
            theme: "bootstrap-5",
            width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
            placeholder: $(this).data('placeholder'),
            closeOnSelect: false,
        });

        function showOptions(className) {
            let inputName, prefix
            options = document.getElementsByClassName(className)
            if (options[0].style.visibility == "hidden") {
                options[0].style.visibility = "visible"
                options[0].style.top = "30px"
                options[0].style.opacity = 1
            } else {
                options[0].style.visibility = "hidden"
                options[0].style.opacity = 0
                options[0].style.top = 0
                setTimeout(() => {
                    if (className.includes("b-")){
                        inputName = "SelectLabNames"
                        prefix = "b-"
                    }else{
                        inputName = "SelectWardNames"
                        prefix= "a-"
                    }
                    innertext =  document.querySelector(`.${className} input[name="${inputName}"]:checked`).value
                    if(innertext != ""){
                        document.querySelector(`#${prefix}selector`).innerText = innertext
                    }
                }, 50)
            }
        }

        function toggleLabReport(value, labId, modalId) {
            let lab = document.getElementById(labId);
            let backdrop = document.querySelector('.modal-backdrop');
            let modalclass = document.getElementsByClassName(modalId);
            let modal = new bootstrap.Modal(document.getElementById(modalId));

            if (value === 0) {
                modal.show();
                lab.style.display = "none";
            } else {
                modalclass[0].style.display = "none";
                lab.style.display = "flex";
                if (backdrop) backdrop.remove();
            }
        }
    </script>
    @*toggle lab modal only*@
    <script>
        function togglelabview(patientNo, nextId) {
            let elements = document.querySelectorAll(`[id^="lab-${patientNo}"]`);
            let next = document.getElementById(nextId);

            elements.forEach(element => {
                element.style.display = 'none';
            });

            if (next) {
                next.style.display = 'block';
            } else {
                console.error("Elements not found.");
            }
        }
    </script>
    @*toggle all modals*@
    <script>
        const main_card = document.getElementsByClassName("main-card")
        function toggleView(currentView, nextView, patientNo) {

            if (currentView) {
                currentView = document.querySelectorAll(`[id^="${currentView}-${patientNo}"]`)

                currentView.forEach(e => {
                    e.style.display = "none"
                })
                let backdrop = document.querySelector('.modal-backdrop');
                if (backdrop) backdrop.remove();
            }

            if (nextView === 'exampleModal') {
                main_card[0].style.display = "block"
                let modal = new bootstrap.Modal(document.querySelector(`[id^="${nextView}-${patientNo}"]`));
                modal.show();
            } else if (nextView) {
                main_card[0].style.display = "none"
                let next = document.querySelector(`[id^="${nextView}-${patientNo}"]`)
                next.style.display = "flex"
            }
        }
    </script>
    @*backdrop remover*@
    <script>
        let backdrop = document.querySelector('.modal-backdrop');
        if (backdrop) {
            backdrop.addEventListener("click", e => {
                backdrop.remove()
            })
        }
    </script>
}

@*search input*@
<script>
    let keys = [
        @foreach (var drug in Model.AvailableDrugs)
        {
            @Html.Raw($"['{drug.DrugName}', '{drug.Type}'],")
        }
    ];

    let drugs = {
        @foreach (var drug in Model.AvailableDrugs)
        {
            @Html.Raw($"'{drug.DrugName}': '{drug.Type}',")
        }
    };

    const resultBox = document.querySelector('.result-box')
    const inputBox = document.getElementById("input-box")
    const dosageSelect = document.querySelector('.dosage-select')

    inputBox.addEventListener('keyup', function () {
        search();
    });

    function search() {
        let result = []
        let input = inputBox.value
        if (input.length) {
            resultBox.style.display = 'block'
            result = keys.filter((word) => {
                return word[0].toLowerCase().includes(input.toLowerCase())
            })
        }
        display(result)

        if (!result.length) {
            resultBox.innerHTML = ''
            resultBox.style.display = 'none'
        }
    }

    function display(result) {
        const content = result.map((list) => {
            return "<li onclick='selectInput(this)'>" + list[0] + "</li>"
        })

        resultBox.innerHTML = "<ul>" + content.join('') + "</ul>"
    }

    function selectInput(list) {
        resultBox.style.display = 'none'
        inputBox.value = list.innerHTML
        resultBox.innerHTML = ''
        switchDosage(list.innerHTML)
    }

    function switchDosage(drug) {
        if (drugs[drug] == '1') {
            dosageSelect.innerHTML = `
            <option value="1 tab">1 Tab</option>
            <option value="2 tab">2 Tab</option>
            <option value="3 tab">3 Tab</option>
            `
        } else if (drugs[drug] == '2') {
            dosageSelect.innerHTML = `
            <option value="5-10 ml">10 ml</option>
            <option value="10-20 mg">20 ml</option>
            <option value="15-30 mg">30 ml</option>
            `
        }
    }
</script>
