@model DoctorQueueModel

<partial name="Navbar" />

@if (TempData.ContainsKey("D_ConfirmationMessage"))
{
    <div class="alert alert-success">
        @TempData["D_ConfirmationMessage"]
        <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
    </div>
}
@if (TempData.ContainsKey("D_WarningMessage"))
{
    <div class="alert alert-danger">
        @TempData["D_WarningMessage"]
        <button type="button" style="position:absolute;right: 0" data-bs-dismiss="alert" class="btn-close" aria-label="Close"></button>
    </div>
}

<div class="grid">
    <partial name="SidebarPartial" />

    <div class="right" style="margin: auto auto">

        @for (int i = 0; i < Model.QueueViewModel.PatientsInLine.Count(); i++)
        {
            int index = 0;
            var patient = Model.QueueViewModel.PatientsInLine[i];
            @if(patient.HasVisitedLab)
            {
                <div class="lab-report" id="lab-report-@patient.PatientNo">
                    <div class="form-card">
                        @foreach(var lab in @Model.CreateMedicalViewModel[i].VisitedLabs){
                            @if(index == 0){
                                <div id="lab-@patient.PatientNo-@index">
                                    <h2 id="title" class="p-3">
                                    <p id="@lab.LabName">
                                        @lab.LabName
                                    </p>
                                    <button class="close-button" onclick="toggleLabReport(0, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" type="button">
                                        X
                                    </button>
                                    </h2>
                                    <hr>
                                    <div class="lab-details">
                                        <h3>Notes</h3>
                                        <p>
                                            @lab.Notes
                                        </p>
                                        <hr>
                                        <h3>Result</h3>
                                        <p>
                                            @lab.Result
                                        </p>
                                    </div>
                                </div>
                            }else{
                                <div id="lab-@patient.PatientNo-@index" style="display:none">
                                    <h2 id="title" class="p-3">
                                    <p id="@lab.LabName">
                                        @lab.LabName
                                    </p>
                                    <button class="close-button" onclick="toggleLabReport(0, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" type="button">
                                        X
                                    </button>
                                    </h2>
                                    <hr>
                                    <div class="lab-details">
                                        <h3>Notes</h3>
                                        <p>
                                            @lab.Notes
                                        </p>
                                        <hr>
                                        <h3>Result</h3>
                                        <p>
                                            @lab.Result
                                        </p>
                                        @* <button type="button">Show Files</button> *@
                                    </div>
                                </div>
                            }
                            index++;
                        }
                        
                        <hr style="margin-bottom:15px">
                        <div>
                            <ul class="pagination justify-content-center">
                                @for (int pageIndex = 0; pageIndex < Model.CreateMedicalViewModel[i].VisitedLabs.Count; pageIndex++)
                                {
                                    <li onclick="togglelabview('@patient.PatientNo', 'lab-@patient.PatientNo-@pageIndex')" class="page-link">
                                        @(pageIndex + 1)
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        }
        
        <div class="form-card" style="width: 900px;max-width:900px">             
        @for (int i = 0; i < Model.QueueViewModel.PatientsInLine.Count(); i++)
        {
            var patient = Model.QueueViewModel.PatientsInLine[i];
            <div class="exampleModal-@patient.PatientNo" id="exampleModal-@patient.PatientNo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-header">
                <h2 id="title" class="p-3">
                    <p>
                        Diagnose @patient.Patient.FirstName
                    </p>
                </h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="SaveMedicalRecords" method="post" autocomplete="off">
                    <div class="container">
                        <div class="diagnose_row">
                            <div class="diagnose_col">
                                <div class="mb-2 doc-flex">
                                    <label asp-for="CreateMedicalViewModel[i].Symptoms" class="form-label">Symptoms</label>
                                    <textarea asp-for="CreateMedicalViewModel[i].Symptoms" class="form-control" rows="4" placeholder="Enter Symptoms Here"></textarea>
                                </div>
                            </div>
                            <div class="diagnose_col">
                                <div class="mb-2 doc-flex">
                                    <label asp-for="CreateMedicalViewModel[i].Diagnoses" class="form-label">Diagnoses</label>
                                    <textarea asp-for="CreateMedicalViewModel[i].Diagnoses" class="form-control" rows="4" placeholder="Enter Diagnoses Here"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="scroll">
                            <div class="drugs-grid" id="drugFields-@patient.PatientNo">
                                <div id="drug-title">
                                    <label for="addMoreDrugs">Drugs</label>
                                </div>
                                <div class="button-here">
                                    <button id="addMoreDrugs-@patient.PatientNo" type="button" class="add-button" data-patient-id="@patient.PatientNo">
                                        <p>Add</p>
                                    </button>
                                </div>
                                @if(!patient.HasVisitedLab){
                                    @for(int s = 0; s < 10; s++){
                                        <div class="drug_input field-@patient.PatientNo.ToString()" data-patient-id="@patient.PatientNo" data-index="@s-@patient.PatientNo" style="display:none">
                                            <div class="col1">
                                                <input asp-for="CreateMedicalViewModel[i].DrugNames[s].DrugName" class="form-control" placeholder="Drug Name" />
                                            </div>
                                            <div class="col1">
                                                <input asp-for="CreateMedicalViewModel[i].DrugNames[s].Dosage" class="form-control" placeholder="Dosage" />
                                            </div>
                                            <div class="close_button" onclick="removeDrug(this)">
                                                <button type="button" class="btn btn-close btn-danger remove-drug" aria-label="Close"></button>
                                            </div>
                                        </div>
                                    }
                                }
                                else{
                                    var drugList = new List<Drug>();
                                    @for (int d = 0; d < 10; d++)
                                    {
                                        var newDrug = new Drug();
                                        @if(Model.CreateMedicalViewModel[i].DrugNames.Count() > d)
                                        {
                                            newDrug = Model.CreateMedicalViewModel[i].DrugNames[d];
                                        }
                                        drugList.Add(newDrug);
                                    }
                                    Model.CreateMedicalViewModel[i].DrugNames = drugList;
                                    @for (int j = 0; j < Model.CreateMedicalViewModel[i].DrugNames.Count(); j++){
                                        @if(!string.IsNullOrEmpty(Model.CreateMedicalViewModel[i].DrugNames[j].DrugName))
                                        {
                                        <div class="drug_input field-@patient.PatientNo.ToString()" data-patient-id="@patient.PatientNo" data-index="@j-@patient.PatientNo">
                                            <div class="col1">
                                                <input value="@Model.CreateMedicalViewModel[i].DrugNames[j].DrugName" asp-for="CreateMedicalViewModel[i].DrugNames[j].DrugName" class="form-control" placeholder="Drug Name" />
                                            </div>
                                            <div class="col1">
                                                <input value="@Model.CreateMedicalViewModel[i].DrugNames[j].Dosage" asp-for="CreateMedicalViewModel[i].DrugNames[j].Dosage" class="form-control" placeholder="Dosage" />
                                            </div>
                                            <div class="close_button" onclick="removeDrug(this)">
                                                <button type="button" class="btn btn-close btn-danger remove-drug" aria-label="Close"></button>
                                            </div>
                                        </div>
                                        }
                                        else{
                                        <div class="drug_input field-@patient.PatientNo.ToString()" data-patient-id="@patient.PatientNo" data-index="@j-@patient.PatientNo" style="display:none">
                                            <div class="col1">
                                                <input value="@Model.CreateMedicalViewModel[i].DrugNames[j].DrugName" asp-for="CreateMedicalViewModel[i].DrugNames[j].DrugName" class="form-control" placeholder="Drug Name" />
                                            </div>
                                            <div class="col1">
                                                <input value="@Model.CreateMedicalViewModel[i].DrugNames[j].Dosage" asp-for="CreateMedicalViewModel[i].DrugNames[j].Dosage" class="form-control" placeholder="Dosage" />
                                            </div>
                                            <div class="close_button" onclick="removeDrug(this)">
                                                <button type="button" class="btn btn-close btn-danger remove-drug" aria-label="Close"></button>
                                            </div>
                                        </div>
                                        }
                                    }
                                }
                            </div>
                        </div>
                        <input asp-for="CreateMedicalViewModel[i].PatientNo" value="@patient.PatientNo" style="display:none" />
                        <input name="index" value="@i" style="display:none" />
                        <div style="display:grid;grid-template-columns:repeat(2, 1fr);gap: 10px">
                            <div id="WardContainer" class="col">
                                <div class="select-options mb-3" id="WardsTemplate" >
                                    <h4 id="selector" onClick="showOptions('a-@patient.QueueNo')">Select Ward Name</h4>
                                    <div style="visibility:hidden;opacity:0;top:0;transition:.3s" class="a-@patient.QueueNo">
                                        @foreach(var wardName in Model.CreateMedicalViewModel[i].AvailableWardNames)
                                        {
                                            <p>
                                                <input style="cursor:pointer" type="radio" id="w-@i-@wardName" value="@wardName" name="SelectWardNames" />
                                                <label onclick="addOrRemove(@wardName)" for="w-@i-@wardName">@wardName</label>
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div id="labFieldsContainer" class="col">
                                <div class="select-options" id="labFieldsTemplate" >
                                    <h4 id="selector" onClick="showOptions('b-@patient.QueueNo')">Select Lab</h4>
                                    <div style="visibility:hidden;opacity:0;top:0;transition:.3s" class="b-@patient.QueueNo">
                                        @foreach(var labName in Model.CreateMedicalViewModel[i].AvailableLabNames)
                                        {
                                            <p>
                                                <input style="cursor:pointer" type="checkbox" id="l-@i-@labName" value="@labName" name="SelectLabNames" />
                                                <label onclick="addOrRemove(@labName)" for="l-@i-@labName">@labName</label>
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer px-0">
                            @if(patient.HasVisitedLab)
                            {
                                <button type="button" onclick="toggleLabReport(1, 'lab-report-@patient.PatientNo', 'exampleModal-@patient.PatientNo')" class="auth-button">View Lab Report</button>
                            }
                            <button type="submit" class="auth-button w-100" style="margin-bottom: 0">Save Medical Records</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        }

<partial name="FooterPartial" />

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to add drug input fields
            var maxDrugFields = 10;

            function addDrug(item) {
                console.log('add drug'+item)
                item = item.toString();
                if ($(`.field-${item}:visible`).length < maxDrugFields) {
                    $('.last-drug').removeClass('last-drug');
                    let div = $(`.field-${item}:hidden:first`).show();
                    div.show();
                    $(`.field-${item}:visible:last`).addClass('last-drug');
                }
            }

            // Function to remove drug input field (in case of error check .drug_input or add a new class to replace drug_input)
            function removeDrug(index, patientNo) {
                console.log("remove drug: "+patientNo)
                $(`.field-${patientNo}[data-index="${index}"]:visible`).removeClass('last-drug');
                var drugField = $(`.field-${patientNo}[data-index="${index}"]:visible`);
                if (drugField.length > 0) {
                    drugField.removeClass('last-drug');
                    drugField.hide();
                    $(`.field-${patientNo}:visible:last`).addClass('last-drug');
                    drugField.find('input').val('');
                }
            }

            // Add More Drugs button click event
            $('[id^="addMoreDrugs-"]').click(function () {
                var patientId = $(this).data('patient-id');
                console.log('add drugs' + patientId)
                addDrug(patientId);
            });

            // Remove Drug button click event
            $('[id^="drugFields-"]').on('click', '.remove-drug', function () {
                var removeIndex = $(this).closest('.drug_input').data('index');
                var patientNo = $(this).closest('.drug_input').data('patient-id');
                console.log("remove drugs: "+patientNo)
                removeDrug(removeIndex, patientNo);
            });
        });
    </script>
    <script>
        $( '#multiple-select-field' ).select2({
            theme: "bootstrap-5",
            width: $( this ).data( 'width' ) ? $( this ).data( 'width' ) : $( this ).hasClass( 'w-100' ) ? '100%' : 'style',
            placeholder: $( this ).data( 'placeholder' ),
            closeOnSelect: false,
        });

        function showOptions(className){
            options = document.getElementsByClassName(className)
            if(options[0].style.visibility == "hidden"){
                options[0].style.visibility = "visible"
                options[0].style.top = "30px"
                options[0].style.opacity = 1
            }else{
                options[0].style.visibility = "hidden"
                options[0].style.opacity = 0
                options[0].style.top = 0
            }
        }
        
        function toggleLabReport(value, labId, modalId) {
            let lab = document.getElementById(labId);
            let backdrop = document.querySelector('.modal-backdrop');
            let modalclass = document.getElementsByClassName(modalId);
            let modal = new bootstrap.Modal(document.getElementById(modalId));

            if (value === 0) {
                console.log("modal appear");
                modal.show();
                lab.style.display = "none";
            } else {
                console.log("modal vanish");
                modalclass[0].style.display = "none";
                lab.style.display = "flex";
                if (backdrop) backdrop.remove();
            }
        }
    </script>
    <script>
        console.log("change lab view")
        function togglelabview(patientNo, nextId) {
            let elements = document.querySelectorAll(`[id^="lab-${patientNo}"]`);
            let next = document.getElementById(nextId);

            elements.forEach(element => {
                element.style.display = 'none';
            });
            
            if (next) {
                next.style.display = 'block';
            } else {
                console.error("Elements not found.");
            }
        }
    </script>
}
